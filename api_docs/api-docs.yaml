openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/users/{name}:
    get:
      tags:
      - user-rest-controller
      operationId: user
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User_UserDetails'
    put:
      tags:
      - user-rest-controller
      operationId: updateUser
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_UserDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User_UserDetails'
  /api/tournaments/{tournamentId}/rounds/{roundId}/matches/{matchId}:
    get:
      tags:
      - tournament-rest-controller
      operationId: getRoundMatch
      parameters:
      - name: tournamentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: roundId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: matchId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MatchUp_MatchDetails'
    put:
      tags:
      - tournament-rest-controller
      operationId: updateMatch
      parameters:
      - name: tournamentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: matchId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchUp_MatchDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MatchUp_MatchDetails'
  /api/tournaments/{id}:
    get:
      tags:
      - tournament-rest-controller
      operationId: getTournament
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tournament_TournamentDetails'
    put:
      tags:
      - tournament-rest-controller
      operationId: replaceTournament
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament_TournamentDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tournament_TournamentDetails'
  /api/teams/{id}:
    get:
      tags:
      - team-rest-controller
      operationId: team
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team_TeamDetails'
    put:
      tags:
      - team-rest-controller
      operationId: updateTeam
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team_TeamDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team_TeamDetails'
  /api/teams/{id}/requests/:
    put:
      tags:
      - team-rest-controller
      operationId: addUserToTeam
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: accept
        in: query
        required: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_TeamDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User_TeamDetails'
    post:
      tags:
      - team-rest-controller
      operationId: requestToJoin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int64
  /api/teams/{id}/members/{userId}:
    put:
      tags:
      - team-rest-controller
      operationId: kickMemberFromTeam
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User_TeamDetails'
  /api/teams/{id}/members/:
    put:
      tags:
      - team-rest-controller
      operationId: LeaveFromTeam
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User_TeamDetails'
  /api/users/{name}/image:
    get:
      tags:
      - user-rest-controller
      operationId: downloadUserImage
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - user-rest-controller
      operationId: uploadUserImage
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/:
    post:
      tags:
      - user-rest-controller
      operationId: newUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_UserDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User_UserDetails'
  /api/tournaments/{tournamentId}/rounds:
    get:
      tags:
      - tournament-rest-controller
      operationId: getTournamentRounds
      parameters:
      - name: tournamentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rounds_RoundDetails'
    post:
      tags:
      - tournament-rest-controller
      operationId: createRounds
      parameters:
      - name: tournamentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Rounds_RoundDetails'
  /api/tournaments/{tournamentId}/participants:
    get:
      tags:
      - tournament-rest-controller
      operationId: getTournamentParticipants
      parameters:
      - name: tournamentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team_TournamentDetails'
    post:
      tags:
      - tournament-rest-controller
      operationId: addParticipantToTournament
      parameters:
      - name: tournamentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team_TournamentDetails'
  /api/tournaments/:
    get:
      tags:
      - tournament-rest-controller
      operationId: getTournaments
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tournament_TournamentDetails'
    post:
      tags:
      - tournament-rest-controller
      operationId: createTournament
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament_TournamentDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tournament_TournamentDetails'
  /api/teams/{id}/image:
    get:
      tags:
      - team-rest-controller
      operationId: downloadUserImage_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - team-rest-controller
      operationId: uploadUserImage_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/teams/{id}/games/:
    post:
      tags:
      - team-rest-controller
      operationId: addGameToTeam
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game_TeamDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game_TeamDetails'
  /api/teams/{id}/admins/:
    post:
      tags:
      - team-rest-controller
      operationId: addUserToAdmins
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_TeamDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User_TeamDetails'
  /api/teams/:
    get:
      tags:
      - team-rest-controller
      operationId: getTeams
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team_TeamDetails'
    post:
      tags:
      - team-rest-controller
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team_TeamDetails'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team_TeamDetails'
  /api/auth/refresh:
    post:
      tags:
      - login-controller
      operationId: refreshToken
      parameters:
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/logout:
    post:
      tags:
      - login-controller
      operationId: logOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/login:
    post:
      tags:
      - login-controller
      operationId: login
      parameters:
      - name: accessToken
        in: cookie
        required: false
        schema:
          type: string
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/users/logged:
    get:
      tags:
      - user-rest-controller
      operationId: logged
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User_UserDetails'
  /api/tournaments/{tournamentId}/rounds/{roundId}:
    get:
      tags:
      - tournament-rest-controller
      operationId: getTournamentRound
      parameters:
      - name: tournamentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: roundId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Rounds_RoundDetails'
  /api/tournaments/{tournamentId}/rounds/{roundId}/matches:
    get:
      tags:
      - tournament-rest-controller
      operationId: getRoundMatches
      parameters:
      - name: tournamentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: roundId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchUp_MatchDetails'
  /api/tournaments/{tournamentId}/participants/{teamId}:
    get:
      tags:
      - tournament-rest-controller
      operationId: getTournamentParticipant
      parameters:
      - name: tournamentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: teamId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team_TournamentDetails'
  /api/tournaments/pages:
    get:
      tags:
      - tournament-rest-controller
      operationId: getTournametPage
      parameters:
      - name: numPage
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tournament_TournamentDetails'
  /api/teams/{id}/chart:
    get:
      tags:
      - team-rest-controller
      operationId: getChart
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Team_TeamChart'
  /api/teams/pages:
    get:
      tags:
      - team-rest-controller
      operationId: getTournametPage_1
      parameters:
      - name: numPage
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team_TeamDetails'
  /api/teams/league:
    get:
      tags:
      - team-rest-controller
      operationId: getLeague
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team_TeamDetails'
  /api/games/:
    get:
      tags:
      - game-rest-controller
      operationId: teams
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
components:
  schemas:
    Game_UserDetails:
      type: object
    Team_UserDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game_UserDetails'
        requests:
          type: array
          items:
            type: integer
            format: int64
    User_UserDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        encodedPassword:
          type: string
        team:
          $ref: '#/components/schemas/Team_UserDetails'
        roles:
          type: array
          items:
            type: string
        riot:
          type: string
        blizzard:
          type: string
        psn:
          type: string
        xbox:
          type: string
        steam:
          type: string
    Game_MatchDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    MatchUp_MatchDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        team1:
          $ref: '#/components/schemas/Team_MatchDetails'
        team2:
          $ref: '#/components/schemas/Team_MatchDetails'
        score1:
          type: integer
          format: int32
        score2:
          type: integer
          format: int32
        isPlayed:
          type: boolean
        winner:
          $ref: '#/components/schemas/Team_MatchDetails'
        played:
          type: boolean
    Team_MatchDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game_MatchDetails'
        requests:
          type: array
          items:
            type: integer
            format: int64
    Game_TournamentDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Rounds_TournamentDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        numRound:
          type: integer
          format: int32
        evenRound:
          type: boolean
    Team_TournamentDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game_TournamentDetails'
        requests:
          type: array
          items:
            type: integer
            format: int64
    Tournament_TournamentDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        currentPlayers:
          type: integer
          format: int32
        maxPlayers:
          type: integer
          format: int32
        iniDate:
          type: string
        endDate:
          type: string
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Team_TournamentDetails'
        winner:
          $ref: '#/components/schemas/Team_TournamentDetails'
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/Rounds_TournamentDetails'
        game:
          $ref: '#/components/schemas/Game_TournamentDetails'
        roundNumber:
          type: integer
          format: int32
        started:
          type: boolean
        finished:
          type: boolean
        admin:
          $ref: '#/components/schemas/User_TournamentDetails'
    User_TournamentDetails:
      type: object
      properties:
        encodedPassword:
          type: string
        roles:
          type: array
          items:
            type: string
    Game_TeamDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Team_TeamDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        tournaments:
          type: array
          items:
            $ref: '#/components/schemas/Tournament_TeamDetails'
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game_TeamDetails'
        creator:
          $ref: '#/components/schemas/User_TeamDetails'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User_TeamDetails'
        admins:
          type: array
          items:
            $ref: '#/components/schemas/User_TeamDetails'
        requests:
          type: array
          items:
            type: integer
            format: int64
    Tournament_TeamDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        maxPlayers:
          type: integer
          format: int32
        iniDate:
          type: string
        endDate:
          type: string
        game:
          $ref: '#/components/schemas/Game_TeamDetails'
        roundNumber:
          type: integer
          format: int32
        started:
          type: boolean
        finished:
          type: boolean
        admin:
          $ref: '#/components/schemas/User_TeamDetails'
    User_TeamDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        encodedPassword:
          type: string
        roles:
          type: array
          items:
            type: string
        riot:
          type: string
        blizzard:
          type: string
        psn:
          type: string
        xbox:
          type: string
        steam:
          type: string
    Game_RoundDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    MatchUp_RoundDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        isPlayed:
          type: boolean
        winner:
          $ref: '#/components/schemas/Team_RoundDetails'
        played:
          type: boolean
    Rounds_RoundDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        matches:
          type: array
          items:
            $ref: '#/components/schemas/MatchUp_RoundDetails'
        numRound:
          type: integer
          format: int32
        evenRound:
          type: boolean
    Team_RoundDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game_RoundDetails'
        requests:
          type: array
          items:
            type: integer
            format: int64
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Team_TeamChart:
      type: object
      properties:
        getnVictories:
          type: integer
          format: int32
        getnLoses:
          type: integer
          format: int32
        recordV:
          type: string
        recordL:
          type: string
    Game:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
